[{"path":"https://mghoff.github.io/billmillr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 billmillr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mghoff.github.io/billmillr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Hoff. Author, maintainer.","code":""},{"path":"https://mghoff.github.io/billmillr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hoff M (2022). billmillr: Rethinking Bill Miller Problem. https://github.com/mghoff/billmillr, https://mghoff.github.io/billmillr/.","code":"@Manual{,   title = {billmillr: Rethinking the Bill Miller Problem},   author = {Matthew Hoff},   year = {2022},   note = {https://github.com/mghoff/billmillr, https://mghoff.github.io/billmillr/}, }"},{"path":"https://mghoff.github.io/billmillr/index.html","id":"billmillr","dir":"","previous_headings":"","what":"Rethinking the Bill Miller Problem","title":"Rethinking the Bill Miller Problem","text":"Author: Matthew Hoff License: MIT","code":""},{"path":"https://mghoff.github.io/billmillr/index.html","id":"the-premise","dir":"","previous_headings":"","what":"The Premise","title":"Rethinking the Bill Miller Problem","text":"package provides functions & documentation solving “Bill Miller Problem” presented within book entitled Drunkard’s Walk: Randomness Rules Lives, written Leonard Mlodinow. generally, functions herein can used solve , either analytically simulation, likelihood obtaining winning streak given length within given number attempts, attempted specified number individuals. premise story goes Bill Miller (financier) amazing stock picker performed incredibly well - beating market - defined outperforming S&P500 - year 15 consecutive years. result, celebrated acclaimed likes Forbes others, claimed likelihood ability perform well 1 32,768, ~0.0032%, roughly true one considers individual, Bill Miller, picking stocks. However, Dr. Mlodinow understands many hedge funds picking stocks based fact, poses question: “1000 stock pickers (coin tossers), odds 1 beats market 15 consecutive years?” answer roughly 3%. Dr. Mlodinow refines calculation considering scenario beating market 15 years consecutively longer 40 year period; .e. 40 years 1000 traders, probability least 1 trader obtain winning streak least 15 years odds winning given year equal 0.5. Based refinement, Dr. Mlodinow claims odds roughly 3 4, 75%; however, provides proof evidence claim. resulting likelihood one person beat market within definite start stop time least 15 years single 40 year period, larger 3% first calculation, much smaller final proposed result ~75%, package built answer results value ~33%.","code":""},{"path":[]},{"path":"https://mghoff.github.io/billmillr/index.html","id":"part-1","dir":"","previous_headings":"The Math","what":"Part 1:","title":"Rethinking the Bill Miller Problem","text":"One must compute odds getting run (Streak) least k heads N coin tosses p (q = 1-p) probability obtaining heads (tails) toss coin. Mathematically, S[N, K] = p^k + \\sum_{j=1, K} \\{ p^{(j-1)} (1-p) S[N-j, K] \\} can broken recursively sum terms: S[n, k] = p^k + … = \\sum_{j=1, k} \\{ p^{(j-1)} (1-p) S[n-j, k] \\} \\text{ } 1 \\le j \\le k provided odds_of_streak(). information math behind recursive odds calculation, see Ask Mathematician post.","code":""},{"path":"https://mghoff.github.io/billmillr/index.html","id":"part-2","dir":"","previous_headings":"The Math","what":"Part 2:","title":"Rethinking the Bill Miller Problem","text":"calculate likelihood least k M people obtain streak least j heads N coin tosses, one must perform following: Calculate PDF: \\mathrm{P}(M = k) = {M \\choose k}p{k}(1-p){(M-k)} , provided odds_of_streak(). , calculate CDF: \\mathrm{P}(X \\le x) = \\sum_{=0,x} \\mathrm{pdf} \\text{ } {\\le x} , finally, calculate final result: \\mathrm{P}(X > x) = 1 - \\mathrm{P}(X \\le x) \\text{; .e. } (1) - (2) provided prob_of_at_least_k().","code":""},{"path":"https://mghoff.github.io/billmillr/index.html","id":"example-1-mathematical-proof","dir":"","previous_headings":"","what":"Example 1: Mathematical Proof","title":"Rethinking the Bill Miller Problem","text":"Load Package… Calculate likelihood obtaining winning streak least 3 heads 5 coin tosses given probability p (q) heads (tails) fair, .e. p = q = 0.5. Now calculate probability least 1 person 8 people obtain winning streak 3 heads given probability said streak 0.25.","code":"library(billmillr) pS <- odds_of_streak(num_coins = 5, min_heads = 3, prob_heads = 0.5) pS #> [1] 0.25  ### NOTE: # Example from \"The Drunkard's Walk: How Randomness Rules Our Lives\" # tictoc::tic() # odds_of_streak(40, 15, 0.5) = 0.000411981 # tictoc::toc() # 24713.89 sec elapsed (6.865 hours) pK <- prob_of_at_least_k(N = 8, K = 1, p = pS) pK #> [1] 0.8998871  ### NOTE: # Example from \"The Drunkard's Walk: How Randomness Rules Our Lives\" continued... # Result (1): P(X = k) where k = 0 is calculated as choose(n, k)*(p**k)*((1-p)**(n-k)) # P(X = 0) ~= 0.66 => P(X > 0) ~= 1 - 0.66 = 0.33"},{"path":"https://mghoff.github.io/billmillr/index.html","id":"example-2-simulation","dir":"","previous_headings":"","what":"Example 2: Simulation","title":"Rethinking the Bill Miller Problem","text":"Run simulation problem, return set resulting data","code":"set.seed(1234) sim_data <- run_simulation(   iters = 5000,   trials = 8,   sample_space = c(0, 1),   sample_size = 5,   run_value = 1,   run_length = 3   )  tail(sim_data) #>      iterations applicable_trials prob_of_zero prob_of_ge_one #> 4995       4995                 0    0.1017017      0.8982983 #> 4996       4996                 2    0.1016813      0.8983187 #> 4997       4997                 0    0.1018611      0.8981389 #> 4998       4998                 1    0.1018407      0.8981593 #> 4999       4999                 1    0.1018204      0.8981796 #> 5000       5000                 0    0.1020000      0.8980000"},{"path":"https://mghoff.github.io/billmillr/reference/billmillr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"billmillr: Rethinking the Bill Miller Problem — billmillr-package","title":"billmillr: Rethinking the Bill Miller Problem — billmillr-package","text":"package calculates likelihood one trader n traders beat market least k-years sequence t-years time period considering independent definite start stop periods k-years sequence given t-years time period nth trader.","code":""},{"path":[]},{"path":"https://mghoff.github.io/billmillr/reference/billmillr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"billmillr: Rethinking the Bill Miller Problem — billmillr-package","text":"Maintainer: Matthew Hoff matthew.g.hoff@gmail.com","code":""},{"path":"https://mghoff.github.io/billmillr/reference/count_runs.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Runs — count_runs","title":"Count Runs — count_runs","text":"given number trials flipping fair coin (p = 0.5) n times, count number times run (streak) length k occurs","code":""},{"path":"https://mghoff.github.io/billmillr/reference/count_runs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Runs — count_runs","text":"","code":"count_runs(   trials,   sample_space,   sample_probs = NULL,   sample_size,   run_value,   run_length )"},{"path":"https://mghoff.github.io/billmillr/reference/count_runs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Runs — count_runs","text":"trials number, number times flipping coin n times. sample_space vector, vector unique values sample. sample_probs vector, vector probabilities equal length sample_space. sample_size number, size sample generate sample_space; e.g. n coin flips. run_value number character, value count sequential occurrences. run_length number, length streak interest value.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/count_runs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Runs — count_runs","text":"number, total number applicable runs; .e. number runs length run greater equal specified run_length.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/count_runs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Runs — count_runs","text":"","code":"count_runs(  trials = 8,  sample_space = c(0, 1),  sample_size = 5,  run_value = 1,  run_length = 3 ) #> [1] 1"},{"path":"https://mghoff.github.io/billmillr/reference/find_longest_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Longest Run — find_longest_run","title":"Calculate the Longest Run — find_longest_run","text":"Finds single longest run (streak) specified value contained within provided vector","code":""},{"path":"https://mghoff.github.io/billmillr/reference/find_longest_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Longest Run — find_longest_run","text":"","code":"find_longest_run(sample, run_value)"},{"path":"https://mghoff.github.io/billmillr/reference/find_longest_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Longest Run — find_longest_run","text":"sample numeric character vector. run_value number character, value count sequential occurrences.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/find_longest_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Longest Run — find_longest_run","text":"number, longest run (streak) values","code":""},{"path":"https://mghoff.github.io/billmillr/reference/find_longest_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Longest Run — find_longest_run","text":"","code":"s <- sample(c(0, 1), size = 10, replace = TRUE) print(s) #>  [1] 1 0 0 0 1 1 0 1 0 1  find_longest_run(sample = s, run_value = 1) #> [1] 2"},{"path":"https://mghoff.github.io/billmillr/reference/odds_of_streak.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Odds of a Streak — odds_of_streak","title":"Calculate the Odds of a Streak — odds_of_streak","text":"Calculate odds single streak least k heads n coin tosses given probability heads (tails) p (q = 1-p).","code":""},{"path":"https://mghoff.github.io/billmillr/reference/odds_of_streak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Odds of a Streak — odds_of_streak","text":"","code":"odds_of_streak(num_coins, min_heads, prob_heads, .saved = NULL)"},{"path":"https://mghoff.github.io/billmillr/reference/odds_of_streak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Odds of a Streak — odds_of_streak","text":"num_coins integer, total number coin flips min_heads integer, minimum number heads obtained single streak prob_heads number, probability obtaining heads single coin toss .saved data frame, contains previously computed probabilities given index; used speed recursion recalculate every probability already seen scenario num_coins, min_heads, prob_heads arises.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/odds_of_streak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Odds of a Streak — odds_of_streak","text":"numeric, odds streak","code":""},{"path":"https://mghoff.github.io/billmillr/reference/odds_of_streak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Odds of a Streak — odds_of_streak","text":"","code":"odds_of_streak(num_coins = 5, min_heads = 3, prob_heads = 0.5) #> [1] 0.25"},{"path":"https://mghoff.github.io/billmillr/reference/prob_of_at_least_k.html","id":null,"dir":"Reference","previous_headings":"","what":"Odds of at least K streaks — prob_of_at_least_k","title":"Odds of at least K streaks — prob_of_at_least_k","text":"Calculate probability occurrence least K-streaks N-events given odds stated streak.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/prob_of_at_least_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Odds of at least K streaks — prob_of_at_least_k","text":"","code":"prob_of_at_least_k(N, K, p)"},{"path":"https://mghoff.github.io/billmillr/reference/prob_of_at_least_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Odds of at least K streaks — prob_of_at_least_k","text":"N integer, total number coin tossers. K integer, number streaks. p number, value 0 & 1 representing probability single streak.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/prob_of_at_least_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Odds of at least K streaks — prob_of_at_least_k","text":"number 0 1","code":""},{"path":"https://mghoff.github.io/billmillr/reference/prob_of_at_least_k.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Odds of at least K streaks — prob_of_at_least_k","text":"","code":"prob_of_at_least_k(  N = 8,  K = 1,  p = odds_of_streak(num_coins = 5, min_heads = 3, prob_heads = 0.5) ) #> [1] 0.8998871"},{"path":"https://mghoff.github.io/billmillr/reference/run_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Simulation — run_simulation","title":"Run Simulation — run_simulation","text":"Iterate count_runs(), counting number applicable trials trial defined occurrence streak least designated length. Additionally, keep running tally cumulative likelihood obtaining exactly zero streaks.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/run_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Simulation — run_simulation","text":"","code":"run_simulation(   iters,   trials,   sample_space,   sample_probs = NULL,   sample_size,   run_value,   run_length )"},{"path":"https://mghoff.github.io/billmillr/reference/run_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Simulation — run_simulation","text":"iters number, number simulation iterations. trials number, see count_runs(). sample_space vector, see count_runs(). sample_probs vector, see count_runs(). sample_size number, see count_runs(). run_value number, see count_runs(). run_length number, see count_runs().","code":""},{"path":"https://mghoff.github.io/billmillr/reference/run_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Simulation — run_simulation","text":"data frame 4 columns: iterations, applicable_trials, prob_of_zero, & prob_of_ge_one; number rows determined iters","code":""},{"path":"https://mghoff.github.io/billmillr/reference/run_simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Simulation — run_simulation","text":"function outputs data frame four columns: 1.) iteration number, 2.) count applicable trials iteration, 3.) cumulative probability obtaining zero streaks. 4.) cumulative probability obtaining least one streak.","code":""},{"path":"https://mghoff.github.io/billmillr/reference/run_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Simulation — run_simulation","text":"","code":"tail(  run_simulation(    iters = 100,    trials = 8,    sample_space = c(0, 1),    sample_size = 5,    run_value = 1,    run_length = 3  ) ) #>     iterations applicable_trials prob_of_zero prob_of_ge_one #> 95          95                 2    0.1052632      0.8947368 #> 96          96                 2    0.1041667      0.8958333 #> 97          97                 3    0.1030928      0.8969072 #> 98          98                 2    0.1020408      0.8979592 #> 99          99                 0    0.1111111      0.8888889 #> 100        100                 2    0.1100000      0.8900000"},{"path":"https://mghoff.github.io/billmillr/news/index.html","id":"billmillr-010","dir":"Changelog","previous_headings":"","what":"billmillr 0.1.0","title":"billmillr 0.1.0","text":"Added NEWS.md file track changes package. Created package scaffolding: functions & documentation.","code":""},{"path":"https://mghoff.github.io/billmillr/news/index.html","id":"billmillr-020","dir":"Changelog","previous_headings":"","what":"billmillr 0.2.0","title":"billmillr 0.2.0","text":"Added functions & documentation simulation solution.","code":""},{"path":"https://mghoff.github.io/billmillr/news/index.html","id":"billmillr-021","dir":"Changelog","previous_headings":"","what":"billmillr 0.2.1","title":"billmillr 0.2.1","text":"Converted analytics functions use lower snake case. Updated documentation based rstudio::conf(2022) pkg development workshop.","code":""}]
